{
    "name": "laravel/laravel",
    "type": "project",
    "description": "The Laravel Framework.",
    "keywords": [
        "framework",
        "laravel"
    ],
    "license": "MIT",
    "require": {
        "php": "^7.4",
        "fideloper/proxy": "^4.2",
        "fruitcake/laravel-cors": "^2.0",
        "guzzlehttp/guzzle": "^7.0.1",
        "laravel/framework": "^8.0",
        "laravel/tinker": "^2.0"
    },
    "require-dev": {
        "facade/ignition": "^2.3.6",
        "fzaninotto/faker": "^1.9.1",
        "mockery/mockery": "^1.3.1",
        "nunomaduro/collision": "^5.0",
        "phpunit/phpunit": "^9.3",
        "laravel/telescope": "^4.0",
        "nunomaduro/phpinsights": "^1.14",
        "barryvdh/laravel-debugbar": "^3.3",
        "barryvdh/laravel-ide-helper": "^2.7"
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "laravel": {
            "dont-discover": [
                "laravel/telescope"
            ]
        }
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "minimum-stability": "dev",
    "prefer-stable": true,
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "check:env": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "keygen": [
            "@php artisan key:generate --ansi"
        ],
        "post-root-package-install": [
            "@check:env"
        ],
        "post-create-project-cmd": [
            "@keygen"
        ],
        "post-install-cmd": [
            "Illuminate\\Foundation\\ComposerScripts::postInstall"
        ],
        "post-update-cmd": [
            "Illuminate\\Foundation\\ComposerScripts::postUpdate"
        ],
        "notify": [
            "node -e \\\"require('node-notifier').notify({title: 'The cake was a lie!', message: 'I am cross-platform notification', icon: path.join(__dirname, 'resources/img/success.jpg'), sound: true})\\\""
        ],
        "reset:composer": [
            "rm -rf vendor/*/"
        ],
        "reset:npm": [
            "rm -rf node-modules/*/"
        ],
        "reset:locks": [
            "rm -f *.lock",
            "rm -f package-lock.json"
        ],
        "npm": [
            "npm i"
        ],
        "reset": [
            "@reset:composer",
            "@reset:npm",
            "@reset:locks",
            "composer install",
            "@npm",
            "@ide",
            "node -e \"require('node-notifier').notify({title: 'Reset Complete!', message: 'Your local project setup was fully reset', icon: path.join(__dirname, 'resources/img/success.jpg'), sound: true})\""
        ],
        "fresh": [
            "@check:env",
            "@keygen",
            "node -e \"require('node-notifier').notify({title: 'Crypto Key Changed!', message: 'Ran artisan key:generate, watch out if you plan to use an existing db.', sound: true})\"",
            "@reset",
            "@mfs"
        ],
        "mfs": [
            "@php artisan migrate:fresh --seed",
            "node -e \"require('node-notifier').notify({title: 'Fresh Data Delivered!', message: 'Your database was reset and fresh data was seeded'})\""
        ],
        "ide": [
            "@php artisan ide-helper:eloquent",
            "@php artisan ide-helper:generate",
            "@php artisan ide-helper:meta"
        ],
        "ide:models": [
            "@php artisan ide-helper:models -W"
        ],
        "ide:full": [
            "@ide",
            "@ide:models"
        ]
    }
}
